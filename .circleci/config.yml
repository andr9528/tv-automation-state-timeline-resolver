version: 2
jobs:
  test-node-8:
    docker:
      - image: circleci/node:8
    working_directory: ~/project
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-cache-8-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-8-{{ .Branch }}
            - yarn-cache-8-
      - run: yarn install
      - run: yarn types-install
      - save_cache:
          key: yarn-cache-8-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths: [node_modules]
      - run: yarn testci
      - run: yarn types-ci

  test-node-10:
    docker:
      - image: circleci/node:10
    working_directory: ~/project
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-cache-10-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-10-{{ .Branch }}
            - yarn-cache-10-
      - run: yarn install
      - run: yarn types-install
      - save_cache:
          key: yarn-cache-10-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths: [node_modules]
      - run: yarn testci
      - run: yarn types-ci

  test-latest(node-12):
    docker:
      - image: circleci/node:12
    working_directory: ~/project
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - yarn-cache-12-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-12-{{ .Branch }}
            - yarn-cache-12-

      - run: yarn install
      - run: yarn types-install

      - save_cache:
          key: yarn-cache-12-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths: [node_modules]

      - run: yarn testci
      - run: yarn types-ci
      - run: yarn send-coverage
      - run: yarn docs:test

      - persist_to_workspace:
          root: .
          paths: [.]
      - store_artifacts:
          path: ./coverage/clover.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: ./coverage/clover.xml

  validate-dependencies:
    docker:
      - image: circleci/node:12
    working_directory: ~/project
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-cache-12-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-12-{{ .Branch }}
            - yarn-cache-12-
            
      - run: yarn install
      - run: yarn validate:dependencies
      - run: yarn types-install
      - run: yarn types-validate:dependencies

  release:
    docker:
      - image: circleci/node:12
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - add_ssh_keys:
          fingerprints:
            - "ba:9e:70:ce:7e:1f:6c:cd:20:2e:ac:e7:ae:48:20:09"
      - run: mkdir -p ~/.ssh
      - run:
          name: Keyscan Github
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      # Clean working tree, tag, and push
      - run: git config --global user.email "info@superfly.tv"
      - run: git config --global user.name "superflytvab"
      - run: yarn release
      - run: git push --follow-tags origin HEAD
      # Build and deploy
      - run: yarn install
      - run: yarn build
      - run: yarn types-install
      - run: yarn types-build
      - run:
          name: Write NPM Token to ~/.npmrc
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publish to NPM with yarn
          command: NEW_VERSION=$(node -p "require('./package.json').version") && yarn publish --access=public --new-version=$NEW_VERSION --network-timeout 100000
      # Also deploy types package to NPM:
      - run:
          name: Publish Types to NPM with yarn
          command: NEW_VERSION=$(node -p "require('./package.json').version") && cd src/types && yarn version --no-git-tag-version --new-version=$NEW_VERSION && yarn publish --access=public --new-version=$NEW_VERSION --network-timeout 100000 && cd ../..

workflows:
  version: 2
  build-test-publish:
    jobs:
      - test-latest(node-12)
      - test-node-10
      - test-node-8
      - validate-dependencies:
          filters:
            branches:
              only:
                - master
                - develop
      - release:
          requires:
            - validate-dependencies
            - test-latest(node-12)
            - test-node-10
            - test-node-8
          filters:
            branches:
              only:
                - master